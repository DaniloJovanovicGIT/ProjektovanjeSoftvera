/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package forme;

import domen.Korisnik;
import domen.Poruka;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import logika.Kontroler;
import transfer.Komunikacija;
import transfer.Operacija;
import transfer.Zahtev;

/**
 *
 * @author Danilo
 */
public class GlavnaForma extends javax.swing.JFrame {

    Korisnik ulogovani;

    /**
     * Creates new form GlavnaForma
     */
    public GlavnaForma(Korisnik korisnik) {
        initComponents();
        Kontroler.getInstace().setGf(this);
        this.ulogovani = korisnik;
        txtUlogovani.setText(ulogovani.getKorisnickoIme());
        popuniUlogovaneKorisnike();
        popuniPoruke();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbAktivniKorisnici = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPoruka = new javax.swing.JTextArea();
        btnPosaljiPoruku = new javax.swing.JButton();
        txtUlogovani = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        cmbPoslednjeTri = new javax.swing.JComboBox();
        btnPrikaziPoslednje3 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cmbOstale = new javax.swing.JComboBox();
        btnPokaziOstale = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        cmbAktivniKorisnici.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Aktivni korisnici");

        jLabel2.setText("Poruka:");

        txtPoruka.setColumns(20);
        txtPoruka.setRows(5);
        jScrollPane1.setViewportView(txtPoruka);

        btnPosaljiPoruku.setText("Posalji poruku");
        btnPosaljiPoruku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPosaljiPorukuActionPerformed(evt);
            }
        });

        txtUlogovani.setText(" ");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Poslednje 3 poruke"));
        jPanel1.setToolTipText("");

        cmbPoslednjeTri.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnPrikaziPoslednje3.setText("Prikazi ceo tekst");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(cmbPoslednjeTri, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnPrikaziPoslednje3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbPoslednjeTri, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrikaziPoslednje3, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Sve poruke"));

        cmbOstale.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnPokaziOstale.setText("Prikazi ceo tekst");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(cmbOstale, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnPokaziOstale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPokaziOstale, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbOstale, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUlogovani, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbAktivniKorisnici, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1)
                    .addComponent(btnPosaljiPoruku, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(13, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtUlogovani)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbAktivniKorisnici, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPosaljiPoruku, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPosaljiPorukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPosaljiPorukuActionPerformed
        String textProuke = txtPoruka.getText();
        if (textProuke.length() > 200) {
            JOptionPane.showMessageDialog(this, "Poruka ne moze imati vise od 200 karaktera");
            return;
        }
        String zaKoga = (String) cmbAktivniKorisnici.getSelectedItem();
        Poruka poruka = new Poruka(-1, ulogovani.getKorisnickoIme(), zaKoga, textProuke, new Date());
        Komunikacija.getInstance().posaljiZahtev(new Zahtev(Operacija.POSALJI_PORUKU, poruka));
    }//GEN-LAST:event_btnPosaljiPorukuActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPokaziOstale;
    private javax.swing.JButton btnPosaljiPoruku;
    private javax.swing.JButton btnPrikaziPoslednje3;
    private javax.swing.JComboBox<String> cmbAktivniKorisnici;
    private javax.swing.JComboBox cmbOstale;
    private javax.swing.JComboBox cmbPoslednjeTri;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtPoruka;
    private javax.swing.JLabel txtUlogovani;
    // End of variables declaration//GEN-END:variables

    private void popuniUlogovaneKorisnike() {
        Komunikacija.getInstance().posaljiZahtev(new Zahtev(Operacija.VRATI_ULOGOVANE, null));

    }

    public void popuniUlogovane(ArrayList<String> listaUlogovanih) {
        cmbAktivniKorisnici.removeAllItems();
        cmbAktivniKorisnici.addItem("svima");
        for (String string : listaUlogovanih) {
            cmbAktivniKorisnici.addItem(string);
        }
    }

    public void pihvatiOdjavu() {
        JOptionPane.showMessageDialog(this, "Server je ugasen, pokusajte kasnije");
        System.exit(0);
    }

    public void obradiPoslataPoruka(boolean uspesnoPoslato) {
        if (uspesnoPoslato) {
            JOptionPane.showMessageDialog(this, "Uspesno poslato");
        } else {
            JOptionPane.showMessageDialog(this, "Poruka nije poslata...");
        }
    }

    public void obradiPopuniPoruke(ArrayList<Poruka> listPoruka) {
        if (listPoruka != null) {
            int brojac = 1;
            cmbPoslednjeTri.removeAllItems();
            cmbOstale.removeAllItems();
            for (Poruka poruka : listPoruka) {
                if (brojac <= 3) {
                    cmbPoslednjeTri.addItem(poruka);
                } else {
                    cmbOstale.addItem(poruka);
                }
                brojac++;
            }
        }
    }

    private void popuniPoruke() {
        Komunikacija.getInstance().posaljiZahtev(new Zahtev(Operacija.VRATI_PORUKE_ZA_KORISNIKA, ulogovani));
    }

    public void obradiNovaPoruka() {
        popuniPoruke();
    }
}
